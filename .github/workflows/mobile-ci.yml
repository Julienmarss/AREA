name: Mobile APK Build

on:
  push:
    branches: [main, develop]
    paths:
      - 'mobile/**'
      - '.github/workflows/mobile-ci.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'mobile/**'

jobs:
  build:
    name: Build Android APK
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: mobile/package-lock.json

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      - name: Install dependencies
        working-directory: ./mobile
        run: npm ci

      - name: Make Gradlew executable
        working-directory: ./mobile/android
        run: chmod +x gradlew

      - name: Build Android APK
        working-directory: ./mobile/android
        run: ./gradlew assembleRelease --no-daemon

      - name: Sign APK (if secrets available)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        working-directory: ./mobile/android
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          echo "APK signing would happen here with production keystore"
          echo "For now, using debug build"

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: area-app
          path: mobile/android/app/build/outputs/apk/release/app-release.apk

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download APK
        uses: actions/download-artifact@v4
        with:
          name: area-app
          path: ./

      - name: Get version from package.json
        id: version
        working-directory: ./mobile
        run: echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.VERSION }}-${{ github.run_number }}
          name: Release v${{ steps.version.outputs.VERSION }}-${{ github.run_number }}
          body: |
            ## AREA Mobile App
            
            **Version:** ${{ steps.version.outputs.VERSION }}
            **Build:** ${{ github.run_number }}
            **Commit:** ${{ github.sha }}
            
            ### Download
            Download the APK below and install it on your Android device.
            
            ### Changes
            ${{ github.event.head_commit.message }}
          files: |
            app-release.apk
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}