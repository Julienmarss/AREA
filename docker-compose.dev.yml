# Docker Compose pour d√©veloppement (SANS mobile)
# Utiliser: docker-compose -f docker-compose.dev.yml up

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: area_postgres
    environment:
      POSTGRES_USER: area_user
      POSTGRES_PASSWORD: area_password
      POSTGRES_DB: area_db
    ports:
      - "5433:5432"  # Port externe 5433 au lieu de 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U area_user"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - area_network

  # Redis for queues and cache
  redis:
    image: redis:7-alpine
    container_name: area_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - area_network

  # Backend Server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
      target: development
    container_name: area_server
    ports:
      - "8080:8080"
    environment:
      NODE_ENV: development
      PORT: 8080
      DATABASE_URL: postgresql://area_user:area_password@postgres:5432/area_db
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your_jwt_secret_change_in_production
      FRONTEND_URL: http://localhost:8081
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - area_network
    command: npm run dev

  # Web Client
  client_web:
    build:
      context: ./web
      dockerfile: Dockerfile
      target: development
    container_name: area_web_client
    ports:
      - "8081:8081"
    environment:
      VITE_API_URL: http://localhost:8080
    volumes:
      - ./web:/app
      - /app/node_modules
    depends_on:
      - server
    networks:
      - area_network

volumes:
  postgres_data:
  redis_data:

networks:
  area_network:
    driver: bridge